var
  express = require('express'),
  app = express(),
  logger = require('bunyan-request-logger'),
  noCache = require('connect-cache-control'),
  ArticleProvider = require('./articleprovider').ArticleProvider,
  formidable = require('formidable'),
  log = logger(),
  pubPath = __dirname + '/../public';
  blogPath=__dirname+'/../public/blog',
   fs   = require('fs-extra');
var bodyParser = require('body-parser')
app.use( bodyParser.json() );       // to support JSON-encoded bodies
app.use(bodyParser.urlencoded());

// Expose the logger so that requiring modules can
// use it.
app.log = log;
app.use(express.static(__dirname + '/../public'));
// Automatically log all incoming requests with
// response data and request ids.
app.use( log.requestLogger() );
app.engine('html', require('ejs').renderFile);
// Remove X-Powered-By header from all responses
app.disable('x-powered-by');

// Route to handle client side log messages.
//
// This route prepends the cache-control
// middleware so that the browser always logs
// to the server instead of fetching a useless
// OK message from its cache.
// 
// Using a 1x1 transparent gif allows you to
// use the logger in emails or embed the tracking
// pixel on third party sites without resorting
// to JavaScript
var articleProvider= new ArticleProvider('localhost', 27017);

app.set('view engine', 'ejs');
app.get( '/log.gif', noCache, log.route() );
app.get('/blog',function(req,res){ articleProvider.findAll(function(error, docs){
	res.render('blog.html',{docs:docs});
      
  });});


 

app.post('/newblog', function(req, res){
 var form = new formidable.IncomingForm();
 var fieldss={};
    form.parse(req, function(err, fields, files) {
    fieldss=fields;
    
     
    });


    form.on('end', function(fields, files) {
        /* Temporary location of our uploaded file */
        console.log(fieldss);
        var temp_path = this.openedFiles[0].path;
        /* The file name of the uploaded file */
        var file_name = this.openedFiles[0].name;

        /* Location where we want to copy the uploaded file */
        var new_location = 'C:/Users/asad/Documents/GitHub/isomorphic-express-boilerplate/app/node_modules/public/assets/img/';
 	console.log("UPLOAD IMAGES");
 	console.log(new_location + file_name);
        fs.copy(temp_path, new_location + file_name, function(err) {  
            if (err) {
                console.error(err);
            } else {
               	  articleProvider.save({
         title: fieldss.title,
        body: fieldss.body,
        image: "/assets/img/"+file_name,
        messages:[],
        postedBy:fieldss.postedby,
        data:Date.now()
    }, function( error, docs) {
        res.redirect('/blog')
    });
            }
        });
         });




});
app.get( '/', function(req,res){res.render('index.html')} );

module.exports = app;
